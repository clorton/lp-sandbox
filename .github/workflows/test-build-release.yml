name: Test, Bump Version, and Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest] # [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run tests
        run: |
          pytest

  bump-and-build:
    name: Bump version and build package
    permissions:
      contents: write
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install bump-my-version and build tools
        run: |
          python -m pip install --upgrade pip
          pip install bump-my-version build

      - name: Bump patch version
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          bump-my-version bump patch

      - name: Push changes and tag
        env:
          GH_TOKEN: ${{ secrets.SANDBOX_COMMIT_TOKEN }}
        run: |
          git push origin HEAD:main
          git push origin v$(bump-my-version show current_version)

      - name: Build package
        run: python -m build

      - name: upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: dist-wheels
          path: dist/*

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: bump-and-build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.23.2

      - name: Build wheels
        env:
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/tests"
          CIBW_SKIP: "pp* *-musllinux*"
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
